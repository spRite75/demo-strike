scalar DateTime

enum CacheControlScope {
  PUBLIC
  PRIVATE
}

directive @cacheControl(
  maxAge: Int
  scope: CacheControlScope
  inheritMaxAge: Boolean
) on FIELD_DEFINITION | OBJECT | INTERFACE | UNION

# Query types
type Query {
  hello: String! @cacheControl(maxAge: 600)
  player(steam64Id: String!): Player @cacheControl(maxAge: 60)
  players: [Player!]! @cacheControl(maxAge: 60)
}

type Player @cacheControl(inheritMaxAge: true) {
  id: ID!
  steam64Id: String!
  displayName: String!
  demoCount: Int!
  lastPlayedTimestamp: DateTime!
  steamProfileUrl: String
  steamAvatarUrlDefault: String
  steamAvatarUrlMedium: String
  steamAvatarUrlFull: String
  matches: [PlayerMatch!]!
}

enum MatchType {
  VALVE
}

type PlayerMatch @cacheControl(inheritMaxAge: true) {
  id: ID!
  matchTimestamp: DateTime!
  matchType: MatchType
  mapName: String!
  teamScore: Int!
  enemyTeamScore: Int!
  playerScores: [PlayerScore!]!
  # personal stats
  kills: Int!
  assists: Int!
  deaths: Int!
  headshotPercentage: String!
}

type PlayerScore @cacheControl(inheritMaxAge: true) {
  id: ID!
  steam64Id: String!
  displayName: String!
  kills: Int!
  assists: Int!
  deaths: Int!
  headshotPercentage: String!
}

# Mutation types
type Mutation {
  noop: String!
}
